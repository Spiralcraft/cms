<meta:Type
  xmlns:meta="class:/spiralcraft/data/types/meta/"
  xmlns:ju="class:/java/util/"
  xmlns:cms="class:/spiralcraft/cms/meta/"
  xmlns:dt="class:/spiralcraft/data/task/"
  xmlns:j="class:/java/lang/"
  xmlns:swa="class:/spiralcraft/webapp/meta/"
  >
  <abstract>true
  </abstract>
  <description>A non-persistent type that provides constant-scoped components
    access to a collection
  </description>

  <parameters>
    <meta:TypeParameter>
      <name>collectionType
      </name>
    </meta:TypeParameter>
  </parameters> 
    
  <fields>
    <meta:Field>
      <name>collectionCode
      </name>
      <type><String.type/>
      </type>
    </meta:Field>
    <meta:RelativeField>
      <name>collection
      </name>
      <template>true
      </template>
      <typeX>[meta:Type].collectionType
      </typeX>
      <fieldList>collectionCode
      </fieldList>
      <referencedFieldList>code
      </referencedFieldList>
    </meta:RelativeField>
    <meta:Field>
      <name>collectionPath
      </name>
      <type><String.type/>
      </type>
      <description>The path of the collection from the root of the site
      </description>
    </meta:Field>
    <meta:Field>
      <name>pathInfo
      </name>
      <type><Path.type/>
      </type>
    </meta:Field>
    <meta:Field>
      <name>baseURI
      </name>
      <description>The root URI for all links to local site content from within
        the collection
      </description>
      <type><URI.type/>
      </type>
    </meta:Field>
  </fields>
  
  <methods>
    <meta:TransactionMethod>
      <name>ensureCollection
      </name>
      <returnTypeX>[meta:Type].collectionType
      </returnTypeX>
      <generic>true
      </generic>
      <x>
        collection
          {.==null
            ?[meta:Type].collectionType.@@ensureCollection(collectionCode)
            :.
          }
      </x>
    </meta:TransactionMethod>
    
    <meta:Method>
      <name>canPost
      </name>
      <parameterTypes><swa:User.type/>
      </parameterTypes>
      <returnType><Boolean.type/>
      </returnType>
      <contextX>[#p] { user:[@swa:User] }
      </contextX>
      <x>user.superUser
      </x>
    </meta:Method>

    <meta:Method>
      <name>canEdit
      </name>
      <parameterTypes>
        <swa:User.type/>
        <cms:AbstractCollectionItem.type/>
      </parameterTypes>
      <returnType><Boolean.type/>
      </returnType>
      <contextX>[#p] { user:[@swa:User], item:[@cms:AbstractCollectionItem] }
      </contextX>
      <x>user!=null &amp;&amp; (user.superUser || item.creatorId==user.id)
      </x>
    </meta:Method>
    
    <meta:Method>
      <name>canComment
      </name>
      <parameterTypes>
        <swa:User.type/>
        <cms:AbstractCollectionItem.type/>
      </parameterTypes>
      <returnType><Boolean.type/>
      </returnType>
      <contextX>[#p] { user:[@swa:User], item:[@cms:AbstractCollectionItem] }
      </contextX>
      <x>user!=null
      </x>
    </meta:Method>
  </methods>
</meta:Type>