<meta:Type
  xmlns:meta="class:/spiralcraft/data/types/meta/"
  xmlns:ju="class:/java/util/"
  xmlns:cms="class:/spiralcraft/cms/meta/"
  xmlns:dt="class:/spiralcraft/data/task/"
  xmlns:j="class:/java/lang/"
  xmlns:swa="class:/spiralcraft/webapp/meta/"
  xmlns:wt="class:/spiralcraft/webtraffic/"
  >
  <description>A non-persistent type that provides constant-scoped components
    access to a blog
  </description>
  
  <fields>
    <meta:Field>
      <name>blogId
      </name>
      <type><String.type/>
      </type>
    </meta:Field>
    <meta:RelativeField>
      <name>blog
      </name>
      <type><cms:Blog.type/>
      </type>
      <fieldList>blogId
      </fieldList>
    </meta:RelativeField>
    <meta:Field>
      <name>blogPath
      </name>
      <type><String.type/>
      </type>
    </meta:Field>
    <meta:Field>
      <name>pathInfo
      </name>
      <type><Path.type/>
      </type>
    </meta:Field>
    <meta:Field>
      <name>baseURI
      </name>
      <description>The root URI for all links to local site content from within
        the blog.
      </description>
      <type><URI.type/>
      </type>
    </meta:Field>
    <meta:Field>
      <name>frontPageType
      </name>
      <description>The content type that should be displayed on the front page-
        one of INDEX or LATEST
      </description>
      <type><String.type/>
      </type>
    </meta:Field>
    <meta:Field>
      <name>allowAnonComments
      </name>
      <description>Whether to allow anonymous comments
      </description>
      <type><Boolean.type/>
      </type>
    </meta:Field>
  </fields>
  
  <methods>
    <meta:TransactionMethod>
      <name>ensureBlog
      </name>
      <returnType><cms:Blog.type/>
      </returnType>
      <x>
        blog
          {.==null
            ?[@cms:Blog].@ensureBlog(blogId)
            :.
          }
      </x>
    </meta:TransactionMethod>
    
    <meta:Method>
      <name>canPost
      </name>
      <parameterTypes><swa:User.type/>
      </parameterTypes>
      <returnType><Boolean.type/>
      </returnType>
      <contextX>[#p] { user:[@swa:User] }
      </contextX>
      <x>user.superUser
      </x>
    </meta:Method>

    <meta:Method>
      <name>canEdit
      </name>
      <parameterTypes>
        <swa:User.type/>
        <cms:BlogPost.type/>
      </parameterTypes>
      <returnType><Boolean.type/>
      </returnType>
      <contextX>[#p] { user:[@swa:User], blogPost:[@cms:BlogPost] }
      </contextX>
      <x>user!=null &amp;&amp; (user.superUser || blogPost.creatorId==user.id)
      </x>
    </meta:Method>
    
    <meta:Method>
      <name>canComment
      </name>
      <parameterTypes>
        <swa:User.type/>
        <cms:BlogPost.type/>
      </parameterTypes>
      <returnType><Boolean.type/>
      </returnType>
      <contextX>[#p] { user:[@swa:User], blogPost:[@cms:BlogPost] }
      </contextX>
      <x>
        ![wt:Session].flagged
        &amp;&amp; 
        ((user==null &amp;&amp; [cms:BlogContext].allowAnonComments) 
          || user!=null
        )
          
      </x>
    </meta:Method>
  </methods>
</meta:Type>